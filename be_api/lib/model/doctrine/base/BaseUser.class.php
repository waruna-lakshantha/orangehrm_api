<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $user_name
 * @property string $password
 * @property integer $employee_id
 * @property Employee $Employee
 * 
 * @method string   getUserName()    Returns the current record's "user_name" value
 * @method string   getPassword()    Returns the current record's "password" value
 * @method integer  getEmployeeId()  Returns the current record's "employee_id" value
 * @method Employee getEmployee()    Returns the current record's "Employee" value
 * @method User     setUserName()    Sets the current record's "user_name" value
 * @method User     setPassword()    Sets the current record's "password" value
 * @method User     setEmployeeId()  Sets the current record's "employee_id" value
 * @method User     setEmployee()    Sets the current record's "Employee" value
 * 
 * @package    orangehrm_api
 * @subpackage model
 * @author     S W L Silva
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('user_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('employee_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Employee', array(
             'local' => 'employee_id',
             'foreign' => 'id'));
    }
}